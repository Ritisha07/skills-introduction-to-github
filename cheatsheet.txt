git config --global user.name "Your Name"           # Set the name for all repositories
git config --global user.email "youremail@example.com"  # Set email for all repositories
git config --list                                    # List all Git configurations


git init                                             # Initialize a new Git repository
git clone <repository_url>                           # Clone an existing repository
git status                                           # Check the status of your repository
git add <file>                                       # Stage changes to a specific file
git add .                                            # Stage all changes
git commit -m "Commit message"                       # Commit staged changes with a message
git push                                             # Push changes to a remote repository
git pull                                             # Fetch and merge changes from the remote


git branch                                           # List all branches
git branch <branch_name>                             # Create a new branch
git checkout <branch_name>                           # Switch to a branch
git checkout -b <branch_name>                        # Create and switch to a new branch
git merge <branch_name>                              # Merge a branch into the current one
git branch -d <branch_name>                          # Delete a branch


git remote -v                                        # List all remote repositories
git remote add origin <repository_url>               # Add a remote repository
git push -u origin <branch_name>                     # Push the branch to remote and track it
git fetch                                            # Fetch all changes from the remote


git log                                              # View commit history
git log --oneline                                    # View history in a single line per commit
git diff                                             # Show unstaged changes
git diff --staged                                    # Show changes staged for commit
git show <commit_hash>                               # Show details of a specific commit


git reset --soft <commit_hash>                       # Undo a commit, keep changes in staging
git reset --hard <commit_hash>                       # Undo a commit and discard all changes
git checkout -- <file>                               # Discard changes in a working directory
git revert <commit_hash>                             # Create a new commit that undoes a previous commit


git stash                                            # Stash changes for later
git stash list                                       # List all stashes
git stash apply                                      # Apply the latest stash
git stash drop                                       # Remove the latest stash


git tag <tag_name>                                   # Create a new tag
git tag                                              # List all tags
git push origin <tag_name>                           # Push a specific tag to the remote
